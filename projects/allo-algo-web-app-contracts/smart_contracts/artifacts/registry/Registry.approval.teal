#pragma version 10

smart_contracts.registry.contract.Registry.approval_program:
    intcblock 1 0 78 32
    bytecblock "profilesById" 0x151f7c75 "anchorToProfileId"
    txn ApplicationID
    bnz main_after_if_else@2
    callsub __init__

main_after_if_else@2:
    callsub __puya_arc4_router__
    return


// smart_contracts.registry.contract.Registry.__init__() -> void:
__init__:
    proto 0 0
    pushbytess "version" 0x01 // "version", 0x01
    app_global_put
    retsub


// smart_contracts.registry.contract.Registry.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    proto 0 1
    txn NumAppArgs
    bz __puya_arc4_router___bare_routing@11
    pushbytess 0x1e6252af 0xb93cabbc 0xdc241a4b 0x4f74e9f7 0xddb61658 0x41fcc955 0xab552ca5 // method "getProfileById(byte[])(byte[],uint256,string,string,address,uint64,address[])", method "getProfileByAnchor(uint64)(byte[],uint256,string,string,address,uint64,address[])", method "createProfile(uint256,string,string)byte[]", method "addMember(byte[],address)void", method "updateProfileName(byte[],string)void", method "updateProfileMetadata(byte[],string)void", method "isOwnerOrMemberOfProfile(byte[],address)bool"
    txna ApplicationArgs 0
    match __puya_arc4_router___getProfileById_route@2 __puya_arc4_router___getProfileByAnchor_route@3 __puya_arc4_router___createProfile_route@4 __puya_arc4_router___addMember_route@5 __puya_arc4_router___updateProfileName_route@6 __puya_arc4_router___updateProfileMetadata_route@7 __puya_arc4_router___isOwnerOrMemberOfProfile_route@8
    intc_1 // 0
    retsub

__puya_arc4_router___getProfileById_route@2:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    txna ApplicationArgs 1
    extract 2 0
    callsub getProfileById
    bytec_1 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___getProfileByAnchor_route@3:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    txna ApplicationArgs 1
    btoi
    callsub getProfileByAnchor
    bytec_1 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___createProfile_route@4:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    extract 2 0
    txna ApplicationArgs 3
    extract 2 0
    callsub createProfile
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_1 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___addMember_route@5:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    callsub addMember
    intc_0 // 1
    retsub

__puya_arc4_router___updateProfileName_route@6:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    callsub updateProfileName
    intc_0 // 1
    retsub

__puya_arc4_router___updateProfileMetadata_route@7:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    callsub updateProfileMetadata
    intc_0 // 1
    retsub

__puya_arc4_router___isOwnerOrMemberOfProfile_route@8:
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    txna ApplicationArgs 1
    extract 2 0
    txna ApplicationArgs 2
    callsub isOwnerOrMemberOfProfile
    pushbytes 0x00
    intc_1 // 0
    uncover 2
    setbit
    bytec_1 // 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    retsub

__puya_arc4_router___bare_routing@11:
    txn OnCompletion
    bnz __puya_arc4_router___after_if_else@15
    txn ApplicationID
    !
    assert // can only call when creating
    intc_0 // 1
    retsub

__puya_arc4_router___after_if_else@15:
    intc_1 // 0
    retsub


// smart_contracts.registry.contract.Registry.getProfileById(id: bytes) -> bytes:
getProfileById:
    proto 1 1
    bytec_0 // "profilesById"
    frame_dig -1
    concat
    box_get
    assert // check self.profilesById entry exists
    retsub


// smart_contracts.registry.contract.Registry.getProfileByAnchor(anchor: uint64) -> bytes:
getProfileByAnchor:
    proto 1 1
    frame_dig -1
    itob
    bytec_2 // "anchorToProfileId"
    swap
    concat
    box_get
    assert // check self.anchorToProfileId entry exists
    bytec_0 // "profilesById"
    swap
    concat
    box_get
    assert // check self.profilesById entry exists
    retsub


// smart_contracts.registry.contract.Registry.createProfile(nonce: bytes, name: bytes, metadata: bytes) -> bytes:
createProfile:
    proto 3 1
    frame_dig -3
    txn Sender
    concat
    sha256
    itxn_begin
    intc_0 // 1
    itxn_field GlobalNumByteSlice
    pushbytes base64(CoEBQw==)
    itxn_field ClearStateProgramPages
    pushbytes base64(CiAEAQDoBwQmAQVvd25lcjEYQAADiAAEiAAJQ4oAACgyA2eJigABMRtBAJqCBQSFSlGNBNfnR4EEO9fOLAQP2ZhwBCgmsgI2GgCOBQACABQALABCAF4jiTEZFEQxGEQ2GgEXwByIAGsiiTEZFEQxGEQ2GgEXwBw2GgIXwDKIAGMiiTEZFEQxGEQ2GgEXwBw2GgIXiABuIokxGRREMRhENhoBF8AcNhoCF8AwNhoDF4gAdSKJMRkURDEYRDYaARfAMIgAfiKJMRlAAAYxGBREIokjiYoBACMoZUQyAxJEKIv/Z4mKAgAjKGVEMgMSRCiL/mexMgAishmL/7IYgQayELIBs4mKAgCIABGxi/+yCIv+sgcishAksgGziYoAACMoZUQxABJEiYoDAIj/7rGL/7ISi/6yEYv9shQlshAksgGziYoBAIj/07ExACOyEov/shGyFCWyECSyAbOJ)
    itxn_field ApprovalProgramPages
    pushint 6 // appl
    itxn_field TypeEnum
    pushint 2000 // 2000
    itxn_field Fee
    itxn_submit
    txn Sender
    itxn CreatedApplicationID
    itob
    dig 2
    len
    pushint 80 // 80
    +
    pushbytes 0x0050
    frame_dig -3
    concat
    dig 1
    itob
    extract 6 2
    concat
    frame_dig -2
    len
    uncover 2
    +
    dup
    itob
    extract 6 2
    uncover 2
    swap
    concat
    frame_dig -1
    len
    uncover 2
    +
    swap
    uncover 3
    concat
    dig 2
    concat
    swap
    itob
    extract 6 2
    concat
    dig 2
    concat
    frame_dig -2
    concat
    frame_dig -1
    concat
    pushbytes base32(AAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA)
    concat
    bytec_0 // "profilesById"
    dig 3
    concat
    dup
    box_del
    pop
    swap
    box_put
    bytec_2 // "anchorToProfileId"
    swap
    concat
    dup
    box_del
    pop
    dig 1
    box_put
    retsub


// smart_contracts.registry.contract.Registry.addMember(profileId: bytes, member: bytes) -> void:
addMember:
    proto 2 0
    bytec_0 // "profilesById"
    frame_dig -2
    concat
    dup
    box_get
    assert // check self.profilesById entry exists
    dup
    intc_2 // 78
    extract_uint16
    dig 1
    len
    dig 2
    dig 2
    uncover 2
    substring3
    extract 2 0
    frame_dig -1
    concat
    dup
    len
    intc_3 // 32
    /
    itob
    extract 6 2
    swap
    concat
    uncover 2
    intc_1 // 0
    uncover 3
    extract3
    swap
    concat
    dig 1
    box_del
    pop
    box_put
    retsub


// smart_contracts.registry.contract.Registry.updateProfileName(profileId: bytes, name: bytes) -> void:
updateProfileName:
    proto 2 0
    frame_dig -2
    callsub _onlyProfileOwner
    bytec_0 // "profilesById"
    frame_dig -2
    concat
    dup
    box_get
    assert // check self.profilesById entry exists
    dup
    pushint 34 // 34
    extract_uint16
    dig 1
    intc_1 // 0
    dig 2
    extract3
    dig 2
    pushint 36 // 36
    extract_uint16
    dig 3
    len
    uncover 4
    dig 2
    uncover 2
    substring3
    uncover 2
    frame_dig -1
    concat
    swap
    concat
    swap
    uncover 2
    -
    frame_dig -1
    len
    dig 2
    pushint 36 // 36
    extract_uint16
    dig 1
    +
    dig 2
    -
    itob
    extract 6 2
    uncover 3
    swap
    replace2 36
    dup
    intc_2 // 78
    extract_uint16
    uncover 2
    +
    uncover 2
    -
    itob
    extract 6 2
    replace2 78
    dig 1
    box_del
    pop
    box_put
    retsub


// smart_contracts.registry.contract.Registry._onlyProfileOwner(profileId: bytes) -> void:
_onlyProfileOwner:
    proto 1 0
    bytec_0 // "profilesById"
    frame_dig -1
    concat
    box_get
    assert // check self.profilesById entry exists
    extract 38 32 // on error: Index access is out of bounds
    txn Sender
    ==
    assert // Only the owner of the profile can call this function
    retsub


// smart_contracts.registry.contract.Registry.updateProfileMetadata(profileId: bytes, metadata: bytes) -> void:
updateProfileMetadata:
    proto 2 0
    frame_dig -2
    callsub _onlyProfileOwner
    bytec_0 // "profilesById"
    frame_dig -2
    concat
    dup
    box_get
    assert // check self.profilesById entry exists
    dup
    pushint 36 // 36
    extract_uint16
    dig 1
    intc_1 // 0
    dig 2
    extract3
    dig 2
    intc_2 // 78
    extract_uint16
    dig 3
    len
    uncover 4
    dig 2
    uncover 2
    substring3
    uncover 2
    frame_dig -1
    concat
    swap
    concat
    swap
    uncover 2
    -
    frame_dig -1
    len
    dig 2
    intc_2 // 78
    extract_uint16
    +
    swap
    -
    itob
    extract 6 2
    replace2 78
    dig 1
    box_del
    pop
    box_put
    retsub


// smart_contracts.registry.contract.Registry.isOwnerOrMemberOfProfile(profileId: bytes, address: bytes) -> uint64:
isOwnerOrMemberOfProfile:
    proto 2 1
    pushbytes ""
    bytec_0 // "profilesById"
    frame_dig -2
    concat
    box_get
    swap
    dup
    uncover 2
    assert // check self.profilesById entry exists
    dup
    intc_2 // 78
    extract_uint16
    dig 1
    len
    substring3
    dup
    intc_1 // 0
    swap
    intc_1 // 0
    extract_uint16
    intc_1 // 0

isOwnerOrMemberOfProfile_for_header@1:
    frame_dig 5
    frame_dig 4
    <
    frame_dig 3
    frame_bury 0
    bz isOwnerOrMemberOfProfile_after_for@6
    frame_dig 2
    extract 2 0
    frame_dig 5
    intc_3 // 32
    *
    intc_3 // 32
    extract3 // on error: Index access is out of bounds
    frame_dig -1
    ==
    bz isOwnerOrMemberOfProfile_after_if_else@4
    intc_0 // 1
    frame_bury 0
    b isOwnerOrMemberOfProfile_after_for@6

isOwnerOrMemberOfProfile_after_if_else@4:
    frame_dig 5
    intc_0 // 1
    +
    frame_bury 5
    b isOwnerOrMemberOfProfile_for_header@1

isOwnerOrMemberOfProfile_after_for@6:
    frame_dig 0
    frame_dig 1
    extract 38 32 // on error: Index access is out of bounds
    frame_dig -1
    ==
    ||
    frame_bury 0
    retsub
